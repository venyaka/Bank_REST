name: "Bank_REST"

services:
  backend:
    image: backend:0.0.1
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${BACKEND_PORT}
    depends_on:
      - db
    env_file:
      - credentials-dev.env
    container_name: bankcards_backend
    networks:
      - global_net

  db:
    image: postgres:12.12-alpine
    ports:
      - ${POSTGRES_PORT}
    volumes:
      - ./pgdata_ci:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
    container_name: bankcards_db
    restart: always
    networks:
      - global_net

  pgadmin:
    container_name: bankcards_pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - ${PGADMIN_PORT}
    networks:
      - global_net

  vault:
    image: vault:1.13.3
    container_name: vault
    ports:
      - ${VAULT_PORT}
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_ROOT_TOKEN}
      VAULT_DEV_LISTEN_ADDRESS: ${VAULT_DEV_LISTEN_ADDRESS}
    cap_add:
      - IPC_LOCK
    networks:
      - global_net

  vault-init:
    image: vault:1.13.3
    depends_on:
      - vault
    entrypoint: ["/bin/sh", "-c", "sleep 5 && vault kv put secret/card-encryption key=${VAULT_ENCRYPTION_KEY}"]
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: ${VAULT_ROOT_TOKEN}
      VAULT_ENCRYPTION_KEY: ${VAULT_ENCRYPTION_KEY}
    networks:
      - global_net

networks:
  global_net:
